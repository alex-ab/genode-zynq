proc run_image {elf_img} {

	set mcopy     [installed_command mcopy]

	#
	# Build U-Boot if needed
	#

	set base_img u-boot/zynq/[board].img

	if {![file exists $base_img]} {
		build { u-boot/zynq } }

	#
	# Build uImage
	#

	set bin_img   [run_dir]/image.bin
	set uboot_img [run_dir]/uImage
	set entrypoint [exec [cross_dev_prefix]readelf -h $elf_img | \
	                grep "Entry point address: " | \
	                sed -e "s/.*Entry point address: *//"]
	set load_addr [exec [cross_dev_prefix]readelf -l $elf_img | \
	               grep -m 1 "LOAD"]
	set load_addr [lindex [regexp -inline -all -- {\S+} $load_addr] 3]

	exec mkdir -p [run_dir]/ext2
	exec [cross_dev_prefix]objcopy -O binary $elf_img $bin_img
	exec gzip --best --force $bin_img
	exec mkimage -A arm -O linux -T kernel -C gzip -a $load_addr \
	              -e $entrypoint -d $bin_img.gz $uboot_img
	exec rm -rf $bin_img.gz

	#
	# Inject uImage into $base_img with mcopy
	#

	set img_file [run_dir].img.incomplete

	exec cp $base_img $img_file
	exec mcopy -i $img_file@@1M $uboot_img ::

	exec mv $img_file [run_dir].img

	puts "Created SD-card image file [run_dir].img"
}
